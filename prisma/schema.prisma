generator client {
  provider = "prisma-client-js"
  output   = "../src/app/generated/prisma"
  runtime  = "vercel-edge"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String    @id @default(cuid())
  userId            String    @map("user_id")
  type              String
  provider          String
  providerAccountId String    @map("provider_account_id")
  refresh_token     String?   @db.Text
  access_token      String?   @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?   @db.Text
  session_state     String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime? @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  studentId     String?   @unique
  staffId       String?   @unique
  firstName     String?
  middleName    String?
  lastName      String?
  email         String?   @unique
  phoneNumber   String?
  password      String?
  emailVerified DateTime? @map("email_verified")
  image         String?
  role          Role      @default(STUDENT)
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

enum Role {
  STUDENT
  FACULTY
  STAFF
  ADMIN
}
